{
	// Place your C++ workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }



	" Code Format": {
  "prefix": "format",
  "body": [
    "#include<bits/stdc++.h>",
    "#include<math.h>",
    "#define ll long long",
    "using namespace std;",
    "#define hmm cout<<\"YES\"<<endl",
    "#define na cout<<\"NO\"<<endl",
    "#define mod   1000000007",
    "#define Exp   1e18",
    "",
    "ll gcd(ll m,ll n)",
    "{",
    "    ll l=max(m,n);",
    "    ll k=min(m,n);",
    "    ll r;",
    "    while(k>0)",
    "    {",
    "        r=l%k;",
    "        l=k;",
    "        k=r;",
    "    }",
    "    return l;",
    "}",
    "",
    "",
    "",
    "void solve()",
    "{",
    "",
    "",
    "}",
    "",
    "",
    "int main()",
    "{",
    "    ll t;",
    "    t=1;",
    "    cin>>t;",
    "    while(t--)",
    "    {",
    "",
    "        solve();",
    "",
    "    }",
    "",
    "}",
    "",
    "",
    ""
  ],
  "description": ""
}
}